<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>

    <div class="container-fluid mt-2">
        <table class="table table-striped table-hover table-responsive">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">№</th>
                    <th scope="col">Atomic Number</th>
                    <th scope="col">Symbol</th>
                    <th scope="col">Name</th>
                    <th scope="col">Group</th>
                    <th scope="col">Standart State</th>
                    <th scope="col">Electronegativity (Pauling Scale)</th>
                    <th scope="col">Melting Point</th>
                    <th scope="col">Boiling Point</th>
                    <th scope="col">Discovered in..</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                }
                @foreach (var element in Model)
                {
                    var modalId = "modal-" + element.Id;
                    <tr>
                        <td scope="row">@i</td>
                        <td class="text-center ">
                            <h5>@element.AtomicNumber</h5>
                        </td>

                        <td>
                            @{
                                var bgColor = string.Empty;

                                switch (element.Group.ToLower())
                                {
                                    case "nonmetal":
                                    case "halogen":
                                        bgColor = "bg-warning";
                                        break;
                                    case "alkali metal":
                                    case "alkali-metal":
                                        bgColor = "bg-danger";
                                        break;
                                    case "alkaline earth metal":
                                        bgColor = "bg-primary";
                                        break;
                                    case "transition metal":
                                        bgColor = "bg-info";
                                        break;
                                    case "post-transition metal":
                                        bgColor = "bg-success";
                                        break;
                                    case "metalloid":
                                        bgColor = "bg-success";
                                        break;
                                    case "noble gas":
                                        bgColor = "bg-dark";
                                        break;
                                }
                            }

                            <div class="card @bgColor">
                                <div class="card-body mx-auto">
                                    @if (string.IsNullOrEmpty(bgColor))
                                    {
                                        <h5 class="card-title text-black">
                                            @element.Symbol
                                        </h5>
                                    }
                                    else
                                    {
                                        <h5 class="card-title text-white">
                                            @element.Symbol
                                        </h5>
                                    }
                                </div>
                            </div>
                        </td>
                        <td><h6 class="font-weight-bold">@element.Name</h6></td>
                        <td>@element.Group</td>
                        <td>@element.StandartState</td>
                        @if (element.Electronegativity is null)
                        {
                            <td class="text-secondary">Unknown</td>
                        }
                        else
                        {
                            <td>@element.Electronegativity </td>
                        }

                        @if (element.MeltingPointInK > 1500)
                        {
                            <td class="text-danger">@element.MeltingPointInK K</td>
                        }
                        else if (element.MeltingPointInK > 750)
                        {
                            <td class="text-warning">@element.MeltingPointInK K</td>
                        }
                        else
                        {
                            <td>@element.MeltingPointInK K</td>
                        }

                        @if (element.BoilingPointInK > 1500)
                        {
                            <td class="text-danger">@element.BoilingPointInK K</td>
                        }
                        else if (element.BoilingPointInK > 750)
                        {
                            <td class="text-warning">@element.BoilingPointInK K</td>
                        }
                        else
                        {
                            <td>@element.BoilingPointInK K</td>
                        }

                        @if (element.YearDiscovered is null)
                        {
                            <td class="text-secondary text-center">Unknown</td>
                        }
                        else
                        {
                            <td class="text-center ">@element.YearDiscovered</td>
                        }

                        <form asp-controller="Elements" asp-action="Update" method="get" asp-route-id="@element.Id">
                        <td class="btn-group">
                            <button type="submit" formmethod="get" class="btn btn-success">Edit</button>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#@modalId">Delete</button>
                        </td>

                        </form>

                        <div class="modal fade" id="@modalId">
                            <div class="modal-dialog">
                                <div class="modal-content">

                                    <div class="modal-header">
                                        <h4 class="modal-title">Warning</h4>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>

                                    <div class="modal-body">
                                        Are you sure you want to delete this element?
                                    </div>

                                    <div class="modal-footer">

                                        <button type="button" class="btn btn-success" data-bs-dismiss="modal">Cancel</button>

                                        <form asp-controller="Elements" asp-action="Delete" method="post">
                                            <input type="hidden" class="form-control" name="id" value="@element.Id">
                                            <button type="submit" class="btn btn-danger" data-bs-dismiss="modal">Delete</button>
                                        </form>
                                    </div>

                                </div>
                            </div>
                        </div>



                    </tr>

                    i++;
                }
            </tbody>
        </table>
    </div>


</body>

</html>
